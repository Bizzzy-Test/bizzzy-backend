openapi: 3.0.0
info:
  title: Bizzzy API Document
  description: |-
    description
  contact:
    email: bizzzy@gmail.com
  version: 1.0.11
externalDocs:
  description: Bizzzy
  url: fagsfagsf
servers:
  - url: "http://localhost:8001/api/v1"
tags:
  - name: User
    description: Everything about user
  - name: Message
    description: Everything about Messages
  - name: Invitation
    description: Everything about Invitation
  - name: Job Proposal
    description: Everything about Job
  - name: Job
    description: Everything about Job
  - name: Feedback
    description: Everything about Feedback

paths:
  # User API

  /register:
    post:
      tags:
        - User
      summary: User Register
      description: User register API
      requestBody:
        description: Create User Object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        200:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRegister200"
        403:
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"

  /login:
    post:
      tags:
        - User
      summary: User Signin
      description: User signin API
      requestBody:
        description: Sign up user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: User loggedin successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLogin200"
        401:
          description: Email or password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /token:
    post:
      tags:
        - User
      summary: Refresh Token
      description: Refresh Token API
      requestBody:
        description: Refresh Token
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        200:
          description: User loggedin successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLogin200"
        401:
          description: Email or password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /profile:
    post:
      tags:
        - User
      summary: Profile 
      description: Profile API
      requestBody:
        description: Profile
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profile"
      responses:
        200:
          description: User loggedin successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile200"
        401:
          description: Email or password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /upload/image/{user_id}:
    post:
      tags:
        - User
      summary: Upload image 
      description: Upload image API
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: User loggedin successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile200"
        401:
          description: Email or password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /load-profile-image/{profile_image}:
    post:
      tags:
        - User
      summary: Profile image 
      description: Profile image API
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: profile_image
          required: true
          schema:
            type: string
          
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: User loggedin successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profile200"
        401:
          description: Email or password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /resend-verify-email:
    post:
      tags:
        - User
      summary: Resend verify email
      description: Resend verify email API
      requestBody:
        description: Resend verify email of user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendVerifyEmail"
      responses:
        200:
          description: Email resent for verification
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResendVerifyEmail200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /verify-email:
    post:
      tags:
        - User
      summary: Verify email
      description: Verify email API
      requestBody:
        description: Verify email of user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyEmail"
      responses:
        200:
          description: Email has been successfully verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyEmail200"
        401:
          description: Email or Token is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        403:
          description: Email has not been verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /add/feedback:
    post:
      tags:
        - Feedback
      summary: Add feedback
      description: Post feedback API
      requestBody:
        description: Post feedback
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddFeedback"
      responses:
        200:
          description: Email has been successfully verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddFeedback200"
        401:
          description: Email or Token is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        403:
          description: Email has not been verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /feedback:
    get:
      tags:
        - Feedback
      summary: Retrive Feedback
      description: Feedback List
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: string
        - in: query
          name: role
          required: true
          schema:
            type: number
      responses:
        200:
          description: Feedback list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: Feedback list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /users/list:
    get:
      tags:
        - User
      summary: Retrive user
      description: User List
      security:
        - BearerAuth: []
      responses:
        200:
          description: User list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /job/get-all:
    get:
      tags:
        - Job
      summary: Retrive all jobs
      description: Job List
      security:
        - BearerAuth: []
      responses:
        200:
          description: Job list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllJob200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: Job list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /admin/dasboard/jobs:
    get:
      tags:
        - Job
      summary: Retrive jobs for dashboard 
      description: Job List for dashboard
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
        - in: query
          name: end_date
          schema:
            type: string
        - in: query
          name: role
          required: true
          schema:
            type: number
      responses:
        200:
          description: Job list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getJobForDashboard200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: Job list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /job/get-by-user-id/{id}:
    get:
      tags:
        - Job
      summary: Retrive all jobs by user id
      description: Job List by user id
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          
      responses:
        200:
          description: Job fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAllJobByUserId200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: Job list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /job/get/{id}:
    get:
      tags:
        - Job
      summary: Retrive jobs by id
      description: Job List id
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          
      responses:
        200:
          description: Job fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSingleJob200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: Job list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /get-countries:
    get:
      tags:
        - User
      summary: Retrive countries
      description: Countries List
      responses:
        200:
          description: Get all countries successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList200"

        404:
          description: Countries list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /message-list:
    get:
      tags:
        - Message
      summary: Retrive messages
      description: Messages List
      parameters:
        - in: query
          name: receiver_id
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        200:
          description: Message list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMessageList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        404:
          description: Message list not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /user-chat-list:
    get:
      tags:
        - Message
      summary: Retrive chat user list
      description: Chat user List
      security:
        - BearerAuth: []
      responses:
        200:
          description: Chat user list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChatUserList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        404:
          description: Chat user list not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /getOptionsList:
    get:
      tags:
        - User
      summary: Retrive options list
      description: Retrive options List
      parameters:
        - in: query
          name: user_type
          schema:
            type: number
            enum:
              - 1
              - 2
            x-enum-descriptions:
              1: Freelancer User
              2: client User
      security:
        - BearerAuth: []
      responses:
        200:
          description: Options list retrived successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OptionsList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /users/profile:
    get:
      tags:
        - User
      summary: Retrive User Profile with feedback
      description: Retrive User Profile with feedback
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        200:
          description: User details list fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileList200"
        400:
          description: Please provide token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Token expired, Please generate new token!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        404:
          description: User list not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
 
  /forgot-password:
    post:
      tags:
        - User
      summary: Forgot password email
      description: Forgot Password API
      security:
        - BearerAuth: []
      requestBody:
        description: Forgot Password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendVerifyEmail"
      responses:
        200:
          description: Email sent successfully with the password reset link
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResendVerifyEmail200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /change-password:
    post:
      tags:
        - User
      summary: Change password
      description: Change Password API
      security:
        - BearerAuth: []
      requestBody:
        description: Change Password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      responses:
        200:
          description: Password forgot successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePassword200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        403:
          description: Password forgot unsuccessful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"
  
  /reset-password:
    post:
      tags:
        - User
      summary: Reset password
      description: Reset Password API
      security:
        - BearerAuth: []
      requestBody:
        description: Reset Password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPassword"
      responses:
        200:
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePassword200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        403:
          description: Old password not matched
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"

  /invitation-send:
    post:
      tags:
        - Invitation
      summary: Send Invitation
      description: Send Invitation API
      security:
        - BearerAuth: []
      requestBody:
        description: Send Invitation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendInvitation"
      responses:
        200:
          description: Invitation send successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePassword200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        403:
          description: Invitation already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"

  /invitation-details:
    get:
      tags:
        - Invitation
      security:
        - BearerAuth: []
      summary: Retrive invitations
      parameters:
        - in: query
          name: job_id
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvitatonList200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Unauthorize error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /invitation-status-update:
    put:
      tags:
        - Invitation
      security:
        - BearerAuth: []
      summary: Update invitations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInvitation"

      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateInvitation"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Unauthorize error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /job-proposal:
    post:
      tags:
        - Job Proposal
      summary: Create Job Proposal
      description: Create Job Proposal
      requestBody:
        description: Create Job Proposal
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobProposal"
      responses:
        200:
          description: job proposal created succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobProposal200"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  
  /job/create:
    post:
      tags:
        - Job
      summary: Add a job
      description: Endpoint to add a new job
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        200:
          description: job proposal created succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobProposal200"
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
        
  /job-proposal-by-job-id/{jobId}:
    get:
      tags:
        - Job Proposal
      summary: Retrive Job Proposal by job id
      description: Retrive Job Proposal by job id
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          
      responses:
        200:
          description: job proposal fetched succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobProposalByJobId200"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
 
  /job-proposal-by-user-id/{userId}:
    get:
      tags:
        - Job Proposal
      summary: Retrive Job Proposal by job id
      description: Retrive Job Proposal by job id
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          
      responses:
        200:
          description: job proposal fetched succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobProposalByJobId200"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

  /job/delete/{id}:
    delete:
      tags:
        - Job
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          
      summary: Delete job

      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteJob200"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400"
        401:
          description: Unauthorize error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
        403:
          description: Comment not updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403"

components:
  schemas:
    UserRegister:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: number
          enum:
            - 1
            - 2
          x-enum-descriptions:
            1: Freelancer User
            2: client User
        country:
          type: string
        social_logins:
          type: array
        email_verification_token:
          type: string
        is_email_verified:
          type: boolean
        send_promo_emails:
          type: boolean
        has_accepted_terms:
          type: boolean
        date_registered:
          type: string
          format: date-time
        password_reset_token:
          type: string
        last_login:
          type: string
          format: date-time

    UserRegister200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
          properties:
            name:
              type: string
            id:
              type: string
              format: uuid
            email:
              type: string
            role:
              type: number
              enum:
                - 1
                - 2
              x-enum-descriptions:
                1: Freelancer User
                2: client User
    
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    
    SendInvitation:
      type: object
      properties:
        receiver_id:
          type: string
        job_id:
          type: string
   
    UpdateInvitation:
      type: object
      properties:
        receiver_id:
          type: string
        job_id:
          type: string
    
    Profile:
      type: object
      properties:
        user_id:
          type: string
        name:
          type: string
        role:
          type: number
          enum:
            - 1
            - 2
          x-enum-descriptions:
            1: Freelancer User
            2: client User
        company_name:
          type: string
        industry:
          type: array
          items:
            type: string
        location:
          type: string
        company_stage:
          type: string
        country:
          type: string
        state:
          type: string
        position:
          type: string
        bio:
          type: string
        profile_image:
          type: string
        rate:
          type: string
        seeking_help:
          type: array
          items:
            type: string
        provide_help:
          type: array
          items:
            type: string
    
    Profile200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
          properties:
            _id:
              type: string
              format: uuid
            user_id:
              type: string
            name:
              type: string
            role:
              type: number
              enum:
                - 1
                - 2
              x-enum-descriptions:
                1: Freelancer User
                2: client User
            company_name:
              type: string
            industry:
              type: array
              items:
                type: string
            location:
              type: string
            company_stage:
              type: string
            country:
              type: string
            state:
              type: string
            position:
              type: string
            bio:
              type: string
            profile_image:
              type: string
            rate:
              type: string
            seeking_help:
              type: array
              items:
                type: string
            provide_help:
              type: array
              items:
                type: string
            is_deleted:
              type: boolean
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            _v:
              type: string

    UserLogin200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            role:
              type: number
              enum:
                - 1
                - 2
              x-enum-descriptions:
                1: Freelancer User
                2: client User
            id:
              type: string
              format: uuid
            token:
              type: string

    VerifyEmail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
    
    VerifyEmail200:
      type: object
      properties:
        success:
            type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
    
    UserList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
              country_name:
                type: string
    FeedbackList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
              sender_id:
                type: string
              reciever_id:
                type: string
              private_feedback:
                type: object
                properties:
                  reason_for_ending_contract:
                    type: string
                  recommending_to_others:
                    type: number
                  strengths:
                    type: array
                    items:
                      type: string
                  status:
                    type: number
                  is_deleted:
                    type: boolean
              public_feedback:
                type: object
                properties:
                  reason_for_ending_contract:
                    type: string
                  recommending_to_others:
                    type: number
                  feedback:
                    type: array
                    items:
                      type: object
                      properties:
                        options:
                          type: string
                        ratings:
                          type: string
                        _id: 
                          type: string
                  feedback_message:
                    type: string
                  status:
                    type: number
                  is_deleted:
                    type: boolean
              is_deleted:
                type: boolean
              state:
                type: number
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              _v:
                type: string
              client_details:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    businessName:
                      type: string
                    profile_image:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    location:
                      type: string
    UserProfileList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                format: uuid
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              country:
                type: string
              email_verification_token:
                type: string
              is_email_verified:
                type: boolean
              send_promo_emails:
                type: boolean
              has_accepted_terms:
                type: boolean
              is_deleted:
                type: boolean
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              _v:
                type: string
              role:
                type: number
                enum:
                  - 1
                  - 2
                x-enum-descriptions:
                  1: Freelancer User
                  2: client User
              feedback_details:
                type: array
                items:
                  type: object
                  properties:
                    _id: 
                      type: string
                      format: uuid
                    sender_id: 
                      type: string
                      format: uuid
                    reciever_id: 
                      type: string
                      format: uuid
                    private_feedback: 
                      type: object
                      properties:
                        reason_for_ending_contract:
                          type: string
                        recommending_to_others:
                          type: string
                        strengths:
                          type: array
                          items:
                            type: string
                        status:
                          type: string
                        is_deleted:
                          type: boolean
                    public_feedback:
                      type: object
                      properties:
                        feedback:
                          type: array
                          items:
                            type: object
                            properties:
                              options:
                                type: string
                              ratings:
                                type: string  
                              _id:
                                type: string
                                format: uuid
                    is_deleted:
                      type: boolean
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    _v:
                      type: string
                    feedback_giver_user_details:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            format: uuid
                          firstName:
                            type: string
                          lastName:
                            type: string
                          email:
                            type: string

    AddFeedback200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
          properties:
            _id: 
              type: string
              format: uuid
            sender_id: 
              type: string
              format: uuid
            reciever_id: 
              type: string
              format: uuid
            private_feedback: 
              type: object
              properties:
                reason_for_ending_contract:
                  type: string
                recommending_to_others:
                  type: string
                strengths:
                  type: array
                  items:
                    type: string
                status:
                  type: string
                is_deleted:
                  type: boolean
            public_feedback:
              type: object
              properties:
                feedback:
                  type: array
                  items:
                    type: object
                    properties:
                      options:
                        type: string
                      ratings:
                        type: string  
                      _id:
                        type: string
                        format: uuid
            is_deleted:
              type: boolean
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            _v:
              type: string

    AddFeedback:
      type: object
      properties:
        sender_id: 
          type: string
          format: uuid
        reciever_id: 
          type: string
          format: uuid
        private_feedback: 
          type: object
          properties:
            reason_for_ending_contract:
              type: string
            recommending_to_others:
              type: string
            strengths:
              type: array
              items:
                type: string
            status:
              type: string
            is_deleted:
              type: boolean
        public_feedback:
          type: object
          properties:
            feedback:
              type: array
              items:
                type: object
                properties:
                  options:
                    type: string
                  ratings:
                    type: string  
                  _id:
                    type: string
                    format: uuid
            description:
              type: string

    OptionsList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
          properties:
            strengths:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    format: uuid
                  name:
                    type: string
            reasons:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  user_type:
                    type: number
                    enum:
                      - 1
                      - 2
                    x-enum-descriptions:
                      1: Freelancer User
                      2: client User
            feedback_options:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    format: uuid
                  name:
                    type: string

    ResendVerifyEmail:
      type: object
      properties:
        email:
          type: string
    
    ChangePassword:
      type: object
      properties:
        new_password:
          type: string
    
    ResetPassword:
      type: object
      properties:
        new_password:
          type: string
        old_password:
          type: string
    
    ChangePassword200:
      type: object
      properties:
        success:
            type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object
    
    ResendVerifyEmail200:
      type: object
      properties:
        success:
            type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object

    GetMessageList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              sender_id:
                type: string
              receiver_id:
                type: string
              message:
                type: string
              message_type:
                type: string
              is_deleted:
                type: boolean
              status:
                type: string
              _id:
                type: string
                format: uuid
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              __v:
                type: string
              job_id:
                type: string
              job_details:
                type: array
                items:
                  properties:
                    _id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    client_detail:
                      type: string
                    budget:
                      type: number
                    amount:
                      type: number
              sender_details:
                type: array
                items:
                  properties:
                    _id:
                      type: string
                      format: uuid
                    firstname:
                      type: string
                    lastname:
                      type: string
                    profile_image:
                      type: string
                    user_id:
                      type: string
                    businessName:
                      type: string
              receiver_details:
                type: array
                items:
                  properties:
                    _id:
                      type: string
                      format: uuid
                    firstname:
                      type: string
                    lastname:
                      type: string
                    profile_image:
                      type: string
                    user_id:
                      type: string
                    businessName:
                      type: string

    GetChatUserList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              chatId:
                type: string
              lastMessage:
                type: string
              timestamp:
                type: string
              job_details:
                type: array
                items:
                  properties:
                    _id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    client_detail:
                      type: string
                    budget:
                      type: number
                    amount:
                      type: number
              user_details:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      format: uuid
                    user_id:
                      type: string
                    profile_image:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string

    GetInvitatonList200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
    
    JobProposal:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        desiredPrice:
          type: number
        PaymentPreference:
          type: string
          enum:
            - project
            - milestone
            - hourly
        coverLetter:
          type: string
        projectFilesLink:
          type: array
          items:
            type: string
    
    Job:
      type: object
      properties:
        file:
          type: string
        title:
          type: string
        description:
          type: string
        client_detail:
          type: string
        tags:
          type: array
          items:
            type: string
        budget:
          type: string
        amount:
          type: number
        experience:
          type: string
        durations:
          type: string
        skills:
          type: array
          items:
            type: string

    JobProposal200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id: 
                type: string
                format: uuid
              jobId:
                type: string
                format: uuid
              userId:
                type: string
                format: uuid
              desiredPrice:
                type: number
              PaymentPreference:
                type: string
                enum:
                  - project
                  - milestone
                  - hourly
              coverLetter:
                type: string
              projectFilesLink:
                type: array
                items:
                  type: string
              _v: 
                type: string
    
    DeleteJob200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id: 
                type: string
                format: uuid

    JobProposalByJobId200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              jobId:
                type: string
              userId:
                type: string
              desiredPrice: 
                type: string
              PaymentPreference: 
                type: string
              coverLetter: 
                type: string
              projectFilesLink:
                type: array
                items:
                  type: string
              _v: 
                type: string
    
    GetAllJobByUserId200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
              description: 
                type: string
              client_detail: 
                type: string
              budget: 
                type: string
              tags:
                type: array
                items:
                  type: string
              skills:
                type: array
                items:
                  type: string
              amount: 
                type: string
              file: 
                type: string
              experience: 
                type: string
              durations: 
                type: string
              __v: 
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    
    GetSingleJob200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
              description: 
                type: string
              client_detail: 
                type: object
                properties:
                  _id: 
                    type: string
                  firstName:
                    type: string
                  lastName: 
                    type: string
                  email: 
                    type: string
                  password: 
                    type: string
                  role:
                    type: number
                    enum:
                      - 1
                      - 2
                    x-enum-descriptions:
                      1: Freelancer User
                      2: client User
                  country:
                    type: string
                  email_verification_token:
                    type: string
                  is_email_verified:
                    type: boolean
                  send_promo_emails:
                    type: boolean
                  has_accepted_terms:
                    type: boolean
                  is_deleted:
                    type: boolean
                  status:
                    type: string
                  social_logins:
                    type: array
                    items:
                      type: string
                  date_registered:
                    type: string
                    format: date-time
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  __v:
                    type: string
              tags:
                type: array
                items:
                  type: string
              skills:
                type: array
                items:
                  type: string
              budget:
                type: string
              amount:
                type: string
              file:
                type: string
              experience:
                type: string
              durations:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    
    GetAllJob200:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
              description: 
                type: string
              client_detail: 
                type: object
                properties:
                  _id: 
                    type: string
                  firstName:
                    type: string
                  lastName: 
                    type: string
                  email: 
                    type: string
                  password: 
                    type: string
                  role:
                    type: number
                    enum:
                      - 1
                      - 2
                    x-enum-descriptions:
                      1: Freelancer User
                      2: client User
                  country:
                    type: string
                  email_verification_token:
                    type: string
                  is_email_verified:
                    type: boolean
                  send_promo_emails:
                    type: boolean
                  has_accepted_terms:
                    type: boolean
                  is_deleted:
                    type: boolean
                  status:
                    type: string
                  social_logins:
                    type: array
                    items:
                      type: string
                  date_registered:
                    type: string
                    format: date-time
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  __v:
                    type: string
              tags:
                type: array
                items:
                  type: string
              skills:
                type: array
                items:
                  type: string
              budget:
                type: string
              amount:
                type: string
              file:
                type: string
              experience:
                type: string
              durations:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
    getJobForDashboard200:
      type: object
      properties:
        success:
            type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              title:
                type: string
              description:
                type: string
              client_details: 
                type: string
              tags:
                type: array
                items:
                  type: string
              budget:
                type: string
              amount:
                type: number
              file:
                type: string
              experience:
                type: string
              skills:
                type: array
                items:
                  type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              _v:
                type: string
              client_profile:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                    businessName:
                      type: string
                    profile_image:
                      type: string
                    firstname:
                      type: string
                    lastname: 
                      type: string
                    location:
                      type: string
    400:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string

    401:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: string

    403:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object

    404:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object

    500:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object

    204:
      type: object
      properties:
        success:
          type: string
        code:
          type: string
        msg:
          type: string
        body:
          type: object

  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: token
